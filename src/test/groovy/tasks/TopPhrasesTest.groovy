package tasks

import spock.lang.Specification
import java.sql.*;
import groovy.sql.Sql
import tasks.TopPhrases


class TopPhrasesTest extends Specification{
	def 'find top N phrases with more cardinality'() {
		given:
		List<String> res=null;

		when:
		res=TopPhrases.findTopPhrases(fileName, topNumber)

		println("oie zhii "+res)

		then:
		res==topPhrases
		where:
		fileName |topNumber | topPhrases
		// The files used were generated by the generate_random_phrases.py
		// script, they have the layout indicated (50 phrases per line). They
		// are not as big as 10GB because the priority queue implemented in 
		// findTopPhrases resides in memory, when it should reside in disk to
		// allow the processing of such huge files. 
		//
		// Also, the expected results here were generated with the
		// count_phrases.sh script, using linux utilities. It would be very
		// difficult to do manually counting of such big input.
		//
		// Finally, even when the current implementation of findTopPhrases is
		// limited (because the queue resides in memory), these tests show the
		// feasibility of using the algorithm implemented there, and the
		// movement to the disk would not affect these results.
		"top_phrases_test_small_1.txt" |5|["", "l", "o", "e", "m"]
		"top_phrases_test_small_2.txt" |50|[
			"",
			"z",
			"k",
			"c",
			"n",
			"d",
			"v",
			"m",
			"e",
			"b",
			"p",
			"q",
			"g",
			"o",
			"l",
			"y",
			"i",
			"u",
			"j",
			"r",
			"f",
			"s",
			"x",
			"a",
			"h",
			"t",
			"w",
			"tk",
			"ns",
			"wr",
			"ma",
			"em",
			"bh",
			"ao",
			"us",
			"rw",
			"ek",
			"cy",
			"sq",
			"kf",
			"jv",
			"hg",
			"xi",
			"vp",
			"ty",
			"rb",
			"qx",
			"ui",
			"ub",
			"ra"
		]
	}
}
